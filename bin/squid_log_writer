#!/usr/bin/env ruby

require 'socket'
require 'optparse'

class Client
  def initialize(host, port)
    @host = host
    @port = port
    @count = 0
  end

  def write_safely(data)
    connect_socket unless @connected
    begin
      @client.puts(data)
      sleep 0.01
    rescue
      @connected = false
    end
  end

  def close
    @client.close if @client && @connected
  end

  private
    def connect_socket
      begin
        @client = TCPSocket.new(@host, @port)
        @connected = true
      rescue
        @connected = false
      end
    end
end


options = {
  port: 10110,
  host: '127.0.0.1'
}
OptionParser.new do |opts|
  opts.banner = "Usage: squid_log_writer [options]"

  opts.on("-p", "--port", "Submit logs to agent running on port [port]") do |port|
    options[:port] = port
  end

  opts.on("-H", "--host", "Submit logs to agent running on host [host]") do |host|
    options[:host] = host
  end
end.parse!


client = Client.new(options[:host], options[:port])

while !$stdin.eof?
  line = $stdin.readline
  entries = line.split("\n")
  # Assume that no meaningful line will be less than this
  entries.each do |e|
    if e.length > 10
      client.write_safely(e)
    end
  end
  $stdout.flush
end
client.close
